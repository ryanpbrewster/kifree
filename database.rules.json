{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth !== null && auth.uid === $uid",
        ".write": "auth !== null && auth.uid === $uid",
        "username": {
          // Usernames are write-once, don't mess it up
          // The format is: alphabetic chars only, length 4--12
          ".validate": "!data.exists() && newData.isString() && newData.val().matches(/[A-Za-z]{4,12}/)"
        },
        "profile": {
          ".read": true,
          "name": {
            ".validate": "newData.isString()"
          }
        },
        "threads": {
          "$threadId": {
            // Anyone can add, and the owner can do anything
            ".write": "!data.exists()",
            ".validate": "newData.isBoolean()"
          }
        }
      }
    },
    "threads": {
      "$threadId": {
				// Users in the thread can read it
				".read": "data.child('users').hasChild(auth.uid)",
				// Anyone can create a thread, but only users in the thread can modify it
				".write": "!data.exists() || (auth !== null && data.child('users').hasChild(auth.uid))",
				".validate": "newData.hasChildren(['createdAt', 'users', 'title', 'url'])",
				"createdAt": {
					".validate": "newData.isNumber()"
				},
				"users": {
					".validate": "newData.hasChildren()"
				},
				"title": {
					".validate": "newData.isString() && newData.val().length > 0"
				},
				"url": {
					".validate": "newData.isString() && newData.val().beginsWith('http')"
				}
      }
    },
    "libraries": {
      "$libraryId": {
        // All libraries are public right now
        ".read": true,
        // Create a fresh library, or be the owner
        ".write": "auth !== null && (!data.exists() || auth.uid === data.child('owner').val())",
        ".validate": "newData.hasChildren(['owner', 'profile'])",
        "owner": {
          // This field can only be written once, and only to the creator's id
          ".validate": "!data.exists() && newData.isString() && newData.val() === auth.uid"
        },
        "profile": {
          "name": {
            ".validate": "newData.isString()"
          }
        }
      }
    }
  }
}
