{
  "rules": {
    "users": {
      "$uid": {
        "profile": {
          // Anyone can read, only the user themself can write
          ".read": true,
          ".write": "auth !== null && auth.uid === $uid"
        },
        "threads": {
          // The user themself can read
          ".read": "auth !== null && auth.uid === $uid",
          "$threadId": {
            // Anyone can append, and the owner can do anything
            ".write": "!data.exists() || (auth !== null && auth.uid === $uid)",
            ".validate": "newData.isString()"
          }
        }
      }
    },
    "threads": {
      "$threadId": {
				// Users in the thread can read it
				".read": "data.child('users').hasChild(auth.uid)",
				// Anyone can create a thread, but only users in the thread can modify it
				".write": "!data.exists() || (auth !== null && data.child('users').hasChild(auth.uid))",
				".validate": "newData.hasChildren(['createdAt', 'users', 'title', 'url'])",
				"createdAt": {
					".validate": "newData.isNumber()"
				},
				"users": {
					".validate": "newData.hasChildren()"
				},
				"title": {
					".validate": "newData.isString() && newData.val().length > 0"
				},
				"url": {
					".validate": "newData.isString() && newData.val().beginsWith('http')"
				}
      }
    }
  }
}
